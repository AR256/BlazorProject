@page "/invoices"
@inject InvoiceService InvoiceService
@inject CustomerService CustomerService
@inject InvoiceTypeService InvoiceTypeService
@inject NavigationManager NavigationManager

<PageTitle>Invoices</PageTitle>
<h3>Invoices</h3>

<button class="btn btn-primary mb-3" @onclick="AddNewInvoice">Add Invoice</button>

@if (invoices == null)
{
    <p>Loading...</p>
}
else
{
    <div class="row">
        @foreach (var invoice in invoices)
        {
            <div class="col-md-3 mb-3">
                <div class="card">
                    <div class="card-body bg-black bg-gradient rounded">
                        <h5 class="card-title text-warning">@invoice.Code</h5>
                        <h6 class="card-subtitle mb-2 text-light">
                            @(customers.Where(c => c.Id == invoice.CustomerId).FirstOrDefault()?.Name ?? "Unknown Customer")
                        </h6>
                        <p class="card-text text-info">Type: @(invoiceTypes.Where(c => c.Id == invoice.InvoiceTypeId).FirstOrDefault()?.Name ?? "Unknown Type")</p>
                        <button class="btn btn-outline-success" @onclick="() => EditInvoice(invoice.Id)">
                            <i class="bi bi-pencil-square"></i>
                        </button>
                        <button class="btn btn-outline-danger" @onclick="() => DeleteInvoice(invoice.Id)">
                            <i class="bi bi-trash"></i>
                            </button>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<Invoice> invoices;
    private List<Customer> customers;
    private List<InvoiceType> invoiceTypes;

    protected override async Task OnInitializedAsync()
    {
        invoices = await InvoiceService.GetAllInvoicesAsync();
        customers = await CustomerService.GetCustomersAsync();
        invoiceTypes = await InvoiceTypeService.GetInvoiceTypesAsync();
    }

    private void AddNewInvoice()
    {
        NavigationManager.NavigateTo("/invoices/add");
    }

    private void EditInvoice(Guid id)
    {
        NavigationManager.NavigateTo($"/invoices/edit/{id}");
    }

    private async Task DeleteInvoice(Guid id)
    {
        await InvoiceService.DeleteInvoiceAsync(id);
        invoices = await InvoiceService.GetAllInvoicesAsync();
    }
}
